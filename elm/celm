#!/bin/bash


usage()
{
cat << EOF
usage: $0 options

OPTIONS:
   -h      Show this message
   -o      --optimize flag
   -i      Module index (1: Charts, 2: Options, 3: OptionPurchase, 4: Critters)
EOF
}

EV="1"
MODULE=
OPTIMIZE=0
TMP="/home/rcs/opt/elmcommon"
while getopts “hoi:” OPTION
do
     case $OPTION in
         h)
             usage
             exit 1
             ;;
         o)
             OPTIMIZE=1
             ;;
         i)
             MODULE=$OPTARG
             ;;
         ?)
             usage
             exit
             ;;
     esac
done

DOCKER_IMG="rcs/elm:0.19"

case $MODULE in

    1) ELM="src/Maunaloa/Charts/Main.elm"
       JS="elm-charts"
       TODIR="maunaloa"
        ;;

    2) ELM="src/Maunaloa/Options/Main.elm"
       JS="elm-options"
       TODIR="maunaloa"
        ;;

    3) ELM="src/Maunaloa/OptionPurchases.elm"
       JS="elm-optionpurchases"
       TODIR="maunaloa"
        ;;

    4) ELM="src/Critters/Main.elm"
       JS="elm-critters"
       TODIR="critters"
        ;;

    5) ELM="src/Vinapu/Projects.elm"
       JS="elm-projects"
       TODIR="vinapu"
        ;;
esac

if [[ $OPTIMIZE -eq 1 ]]; then
    echo "OPTIMIZE"
    elm make $ELM --output "$JS.opt.js" --optimize
else
    elm make $ELM --output "$JS.js"
fi

# cp $JS ../src/main/resources/static/js/$TODIR/$JS

# cp $JS ../out/production/resources/static/js/$TODIR/$JS

if [[ $OPTIMIZE -eq 1 ]]; then
 ./uglifyjs $JS.opt.js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' > $JS.compress.js
 ./uglifyjs --mangle --output=$JS.min.js $JS.compress.js
fi

if [[ $OPTIMIZE -eq 1 ]]; then
    # cp $JS.min.js ../resources/public/js/$JS.js
    cp $JS.min.js ../src/resources/public/js/$TODIR/$JS.js
else
    # cp $JS.js ../resources/public/js/$JS.js
    cp $JS.js ../src/resources/public/js/$TODIR/$JS.js
fi

exit 0

# #!/bin/sh
#
# set -e
#
# js="elm.js"
# min="elm.min.js"
#
# elm make --optimize --output=$js $@
#
# uglifyjs $js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | uglifyjs --mangle --output=$min
#
# echo "Initial size: $(cat $js | wc -c) bytes  ($js)"
# echo "Minified size:$(cat $min | wc -c) bytes  ($min)"
# echo "Gzipped size: $(cat $min | gzip -c | wc -c) bytes"
