module Test.ElmTest where

import Prelude
import Effect.Aff (Aff)
import Effect.Class (liftEffect)
import Test.Unit (TestSuite,suite,test)
--import Test.Unit.Console (consoleLog,log)
import Test.Unit.Assert as Assert
import Data.Maybe (Maybe(..))

import Data.Array (length,head)
import Data.Nullable (null,notNull)
import Maunaloa.Elm (transform)
import Maunaloa.ElmTypes
    ( ElmChart
    , ChartInfoWindow
    )
    
import Maunaloa.ChartCollection (ChartCollection(..),ChartMapping(..))
import Maunaloa.Chart (Chart,ChartId(..))
import Maunaloa.Common 
    ( ChartHeight(..)
    , HtmlId(..)
    , Ticker(..)
    )

import Effect.Console (logShow)

{--
{ chart: 
    { bars: [], 
      candlesticks: [{ c: 34.22, h: 34.53, l: 33.61, o: 33.61 },{ c: 33.62, h: 34.44, l: 32.73, o: 34.07 },
      { c: 34.07, h: 34.29, l: 33.56, o: 33.93 },{ c: 33.12, h: 33.17, l: 31.85, o: 31.9 },{ c: 31.87, h: 32.02, l: 31.1, o: 31.25 },
      { c: 31.1, h: 31.43, l: 30.42, o: 30.93 },{ c: 30.92, h: 30.98, l: 30.0, o: 30.15 },{ c: 29.65, h: 29.92, l: 29.15, o: 29.29 },
      { c: 28.8, h: 29.4, l: 28.75, o: 29.4 },{ c: 29.41, h: 29.8, l: 29.02, o: 29.02 },{ c: 28.84, h: 28.97, l: 28.0, o: 28.0 },
      { c: 27.71, h: 27.96, l: 27.05, o: 27.2 },{ c: 27.2, h: 27.84, l: 27.05, o: 27.71 },{ c: 27.66, h: 27.95, l: 27.06, o: 27.12 },
      { c: 27.03, h: 27.26, l: 26.6, o: 26.72 },{ c: 27.37, h: 28.24, l: 26.93, o: 27.89 },{ c: 28.06, h: 28.15, l: 26.98, o: 27.3 },
      { c: 27.24, h: 27.65, l: 26.93, o: 26.99 },{ c: 26.99, h: 27.24, l: 26.83, o: 26.9 },{ c: 26.87, h: 27.27, l: 26.77, o: 26.92 },
      { c: 26.49, h: 27.02, l: 26.13, o: 26.97 },{ c: 26.78, h: 27.26, l: 26.34, o: 27.19 },{ c: 27.15, h: 28.05, l: 26.75, o: 28.05 },
      { c: 28.05, h: 28.16, l: 26.95, o: 27.34 },{ c: 27.64, h: 28.11, l: 27.35, o: 28.0 },{ c: 27.98, h: 28.31, l: 27.74, o: 28.0 },
      { c: 28.39, h: 28.45, l: 28.06, o: 28.14 },{ c: 27.56, h: 28.11, l: 27.4, o: 28.02 },{ c: 27.88, h: 28.4, l: 27.87, o: 28.02 },
      { c: 27.92, h: 28.12, l: 27.5, o: 28.02 },{ c: 28.55, h: 29.6, l: 28.36, o: 29.25 },{ c: 30.06, h: 30.82, l: 29.92, o: 30.3 },
      { c: 30.41, h: 31.15, l: 30.37, o: 30.85 },{ c: 30.7, h: 31.8, l: 30.53, o: 31.63 },{ c: 31.73, h: 32.65, l: 31.55, o: 32.44 },
      { c: 32.39, h: 33.16, l: 32.39, o: 32.96 },{ c: 32.87, h: 33.59, l: 32.59, o: 33.25 },{ c: 33.23, h: 33.42, l: 32.55, o: 33.0 },
      { c: 32.9, h: 33.1, l: 30.1, o: 30.2 },{ c: 30.66, h: 31.17, l: 30.57, o: 30.57 },{ c: 30.46, h: 30.56, l: 29.94, o: 30.01 },
      { c: 29.96, h: 30.54, l: 29.73, o: 30.3 },{ c: 30.62, h: 31.05, l: 30.61, o: 31.02 },{ c: 31.2, h: 31.31, l: 30.73, o: 30.77 },
      { c: 30.67, h: 31.2, l: 30.64, o: 30.9 },{ c: 30.76, h: 30.89, l: 30.32, o: 30.4 },{ c: 30.18, h: 30.6, l: 30.18, o: 30.5 },
      { c: 30.4, h: 30.56, l: 30.02, o: 30.4 },{ c: 30.6, h: 31.26, l: 30.43, o: 31.15 },{ c: 31.39, h: 31.58, l: 31.05, o: 31.13 },
      { c: 31.13, h: 31.51, l: 30.88, o: 31.48 },{ c: 31.46, h: 31.56, l: 30.79, o: 31.3 },{ c: 31.1, h: 31.13, l: 30.5, o: 30.7 },
      { c: 30.76, h: 31.54, l: 30.58, o: 31.43 },{ c: 31.5, h: 31.78, l: 31.2, o: 31.2 },{ c: 30.5, h: 30.66, l: 30.25, o: 30.38 },
      { c: 30.31, h: 30.62, l: 30.02, o: 30.02 },{ c: 29.83, h: 30.32, l: 29.55, o: 29.8 },{ c: 29.74, h: 30.35, l: 29.64, o: 30.14 },
      { c: 30.27, h: 31.38, l: 30.13, o: 30.93 },{ c: 30.93, h: 31.34, l: 30.66, o: 30.78 },{ c: 30.83, h: 31.35, l: 30.57, o: 31.0 },
      { c: 30.62, h: 31.12, l: 30.62, o: 30.84 },{ c: 30.69, h: 31.12, l: 30.19, o: 30.5 },{ c: 30.5, h: 31.14, l: 30.38, o: 30.99 },
      { c: 30.92, h: 31.29, l: 30.72, o: 31.18 },{ c: 31.18, h: 31.27, l: 30.7, o: 31.0 },{ c: 31.1, h: 32.11, l: 31.04, o: 31.67 },
      { c: 32.11, h: 32.43, l: 31.83, o: 31.98 },{ c: 31.59, h: 31.94, l: 31.3, o: 31.72 },{ c: 31.58, h: 32.39, l: 31.35, o: 31.75 },
      { c: 31.49, h: 33.35, l: 31.49, o: 33.22 },{ c: 31.22, h: 31.65, l: 30.81, o: 31.17 },{ c: 31.25, h: 31.25, l: 30.07, o: 30.49 },
      { c: 30.62, h: 30.74, l: 30.12, o: 30.65 },{ c: 31.06, h: 31.27, l: 30.63, o: 31.27 },{ c: 31.78, h: 32.65, l: 31.71, o: 32.29 },
      { c: 32.28, h: 32.85, l: 32.0, o: 32.52 },{ c: 32.4, h: 33.13, l: 32.4, o: 32.99 },{ c: 32.69, h: 34.0, l: 32.48, o: 34.0 },
      { c: 34.13, h: 35.57, l: 34.04, o: 35.5 },{ c: 35.31, h: 35.6, l: 34.7, o: 35.0 },{ c: 33.43, h: 34.2, l: 33.15, o: 34.16 },
      { c: 33.6, h: 34.16, l: 33.26, o: 33.33 },{ c: 32.04, h: 32.78, l: 31.54, o: 32.64 },{ c: 32.31, h: 32.47, l: 31.93, o: 32.02 },
      { c: 32.02, h: 33.15, l: 31.8, o: 33.15 },{ c: 33.06, h: 33.31, l: 32.71, o: 32.96 },{ c: 32.52, h: 33.5, l: 32.52, o: 33.5 },
      { c: 33.22, h: 33.91, l: 32.88, o: 33.78 }], 
      lines: [
          [33.8,33.2,32.5,31.5,30.7,30.1,29.4,28.8,28.4,28.0,27.5,27.1,27.1,27.0,26.9,27.0,26.7,26.5,26.5,26.5,26.7,27.0,27.4,27.5,27.6,27.9,28.0,28.3,28.9,29.7,30.5,31.2,31.6,32.1,32.4,32.5,32.2,31.7,30.9,30.5,30.4,30.6,30.8,30.7,30.6,30.6,30.7,30.9,31.1,31.1,31.0,30.8,30.6,30.5,30.3,30.0,29.9,30.0,30.2,30.5,30.5,30.5,30.5,30.6,30.8,31.0,31.1,31.2,31.2,31.0,30.9,30.9,30.9,31.0,31.3,31.8,32.2,32.6,32.9,33.2,33.3,32.7,32.2,32.0,32.0,32.3,32.9,33.5,34.2,35.2],
          [29.3,29.0,28.6,28.3,28.0,27.8,27.6,27.4,27.3,27.3,27.2,27.2,27.3,27.4,27.5,27.6,27.7,27.8,27.9,28.1,28.3,28.5,28.7,28.9,29.1,29.2,29.4,29.6,29.8,30.0,30.2,30.4,30.4,30.5,30.5,30.4,30.3,30.1,30.0,29.9,29.9,30.0,30.0,30.0,30.0,30.1,30.1,30.2,30.2,30.3,30.3,30.3,30.3,30.3,30.4,30.4,30.5,30.6,30.8,30.9,31.1,31.2,31.3,31.4,31.6,31.8,31.9,32.0,32.2,32.3,32.4,32.6,32.7,32.9,33.2,33.4,33.7,33.9,34.1,34.3,34.4,34.4,34.5,34.6,34.8,35.0,35.3,35.6,35.9,36.1]], 
      numVlines: 10, valueRange: [24.885714285714283,37.905] }, chart2: null, 
      chart3: { bars: [[0.27248714202866137,0.35957062103457527,0.37974172390454086,0.3436163005671819,0.2739267709960319,0.23641731386062229
      0.30605356737522976,0.22059438860483288,0.20093615911400997,0.21022271265986192,0.21858282830416784,0.185052651007996,0.1788072167612764,
      0.22221656033958165,0.1502925497231281,0.21689038427539878,0.24555147310520148,0.16697923329813893,0.1884389686556024,0.20052268989761118,
      0.276304560503508,0.22312076017339974,0.28675537220092223,0.22318880866064725,0.1864326184165193,0.20144572855166165,0.22114246166832208,
      0.16575207318357477,0.19233066227666032,0.3024649468486355,0.4297843653994092,0.1971940641514247,0.2193607794506276,0.16489234948521256,
      0.1577075474889965,0.12196522252125364,0.18397998192680468,0.24776025329794515,0.5038533964915636,0.18316575096128018,0.11246788386200898,
      0.19354457485659227,0.12469602546957666,0.16809717273149075,0.161475057386128,0.17679842033474327,0.1596093152724219,0.21969454107855582,
      0.22547316651499774,0.16131081337162306,0.14078952447227874,0.1979644225861888,0.2312187843051978,0.20525485540411256,0.255503834398828,
      0.1708364261455504,0.20408843698311385,0.20288862969185503,0.16605514627803844,0.2030072856675177,0.28606659570605153,0.21047435228053768,
      0.282880833660683,0.30077221690185274,0.11987925999970456,0.1476106069864702,0.14666316999525536,0.17787664893286662,0.27906233505111816,
      0.2642792936109555,0.2556228715985088,0.3475419548945272,0.17011724703522876,0.1815162899405624,0.26456857910342785,0.23326862585102306,
      0.2518566642167729,0.10357580186898252,0.24358019547579218,0.26927478960802387,0.30685817243429486,0.44725989677406647,0.24329945575506104,
      0.412585729736633,0.15485440339950166,0.15583659531370844,0.21726271306650088,0.1924669816318326,0.23710850477427486,0.2227750217575666]], 
      candlesticks: [], lines: [], numVlines: 5, valueRange: [0.10357580186898252,0.5038533964915636] }, numIncMonths: 1, 
      startdate: 1557273600000, strokes: ["#000000","#ff0000","#aa00ff"], ticker: "1", 
      xaxis: [3542,3541,3540,3539,3538,3535,3534,3533,3532,3531,3528,3527,3526,3525,3524,3521,3520,3519,3518,3517,3514,3513,3512,3511,3510,3507,
      3506,3505,3504,3503,3500,3499,3498,3497,3496,3493,3492,3491,3490,3489,3486,3485,3484,3483,3482,3479,3478,3477,3476,3475,3472,3471,3470,
      3469,3468,3465,3464,3463,3462,3461,3458,3457,3456,3455,3454,3451,3450,3449,3448,3444,3443,3442,3441,3440,3437,3435,3434,3433,3430,3429,3428,
      3427,3426,3422,3421,3420,3419,3416,3415,3414] }
      --}

{--
newtype HRuler = HRuler { -- dim :: ChartDim
                          startTime :: UnixTime
                        , endTime :: UnixTime
                        , xaxis :: Array Number
                        , ppx :: Pix 
                        , padding :: Padding 
                        , myIncMonths :: Int }
--}

chart :: ElmChart
chart = 
    { bars: []
    , candlesticks: [{ c: 34.22, h: 34.53, l: 33.61, o: 33.61 },{ c: 33.62, h: 34.44, l: 32.73, o: 34.07 },
        { c: 34.07, h: 34.29, l: 33.56, o: 33.93 },{ c: 33.12, h: 33.17, l: 31.85, o: 31.9 },{ c: 31.87, h: 32.02, l: 31.1, o: 31.25 },
        { c: 31.1, h: 31.43, l: 30.42, o: 30.93 },{ c: 30.92, h: 30.98, l: 30.0, o: 30.15 },{ c: 29.65, h: 29.92, l: 29.15, o: 29.29 },
        { c: 28.8, h: 29.4, l: 28.75, o: 29.4 },{ c: 29.41, h: 29.8, l: 29.02, o: 29.02 }]
    , lines: [
        [33.8,33.2,32.5,31.5,30.7,30.1,29.4,28.8,28.4,28.0],
        [29.3,29.0,28.6,28.3,28.0,27.8,27.6,27.4,27.3,27.3]]
    , numVlines: 10 
    , valueRange: [24.885714285714283,37.905] 
    }


chart3 :: ElmChart
chart3 = 
    { bars: [
        [0.27248714202866137,0.35957062103457527,0.37974172390454086,
         0.3436163005671819,0.2739267709960319,0.23641731386062229,
         0.30605356737522976,0.22059438860483288,0.20093615911400997,0.21022271265986192]
        ]
    , candlesticks: []
    , lines: []
    , numVlines: 5
    , valueRange: [0.10357580186898252,0.5038533964915636] 
    }

ciwin :: ChartInfoWindow
ciwin = 
    { chart: chart
    , chart2: null 
    , chart3: notNull chart3
    , numIncMonths: 1
    , startdate: 1557273600000.0
    , strokes: ["#000000","#ff0000","#aa00ff"]
    , ticker: "1"
    , xaxis: [3542,3541,3540,3539,3538,3535,3534,3533,3532,3531] 
    }

chartMapping1 :: ChartMapping
chartMapping1 =
    ChartMapping
    { ticker: Ticker "1"
    , chartId: ChartId "chart"
    , canvasId: HtmlId "canvasId-1"
    , chartHeight: ChartHeight 400.0
    , levelCanvasId: HtmlId "levelCanvasId-1"
    , addLevelId: HtmlId "addLevelId-1"
    , fetchLevelId: HtmlId "fetchLevelId-1"
    }

chartMapping3 :: ChartMapping
chartMapping3 =
    ChartMapping
    { ticker: Ticker "1"
    , chartId: ChartId "chart3"
    , canvasId: HtmlId "canvasId-3"
    , chartHeight: ChartHeight 100.0
    , levelCanvasId: HtmlId "levelCanvasId-3"
    , addLevelId: HtmlId "addLevelId-3"
    , fetchLevelId: HtmlId "fetchLevelId-3"
    }


showChart :: Maybe Chart -> Aff Unit
showChart c = 
    case c of 
        Nothing -> 
            liftEffect $ logShow "NOPE"
        Just c1 ->
            liftEffect $ logShow c1

showChartArray :: Maybe (Array Chart) -> Aff Unit
showChartArray car = 
    case car of 
        Nothing -> 
            liftEffect $ logShow "NOPE"
        Just car1 ->
            showChart (head car1)

testElmSuite :: TestSuite
testElmSuite = 
    suite "testTransformSuite" do
        test "transform" do
            let mappings = [chartMapping1,chartMapping3]
            let (ChartCollection result) = transform mappings ciwin
            {--
            let c1 = head result.charts
            showChart c1
            let c2 = tail result.charts
            showChartArray c2
            --}
            Assert.equal 2 (length result.charts) 


            
